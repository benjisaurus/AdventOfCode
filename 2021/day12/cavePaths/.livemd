# Untitled notebook

## Setup

```elixir
Mix.install([:kino])
```

```elixir
input = Kino.Input.textarea("Paste Input:")
```

```elixir
defmodule Paths do
  def get_conns([], conns) do
    conns
  end

  def get_conns([h | t], conns) do
    [fst | rest] = h
    [snd | _] = rest
    new_conns = Map.update(conns, fst, [snd], fn e -> [snd | e] end)
    get_conns(t, Map.update(new_conns, snd, [fst], fn e -> [fst | e] end))
  end

  def get_paths([], complete, _conns) do
    complete
  end

  def get_paths([h | t], complete, conns) do
    [last | _] = h

    next_nodes =
      Map.get(conns, last)
      |> Enum.map(fn node ->
        case node == String.upcase(node) or !Enum.member?(h, node) do
          true -> [node | h]
          false -> h
        end
      end)

    new_complete = Enum.filter(next_nodes, fn n -> Enum.member?(n, "end") end) ++ complete
    new_to_check = Enum.filter(next_nodes, fn n -> !Enum.member?(n, "end") end) ++ t
    IO.inspect(new_to_check)
    IO.inspect(new_complete)
    get_paths(new_to_check, complete, conns)
  end
end

conns =
  Kino.Input.read(input)
  |> String.split("\n")
  |> Enum.map(fn p -> String.split(p, "-") end)
  |> Paths.get_conns(%{})

Paths.get_paths([["start"]], [], conns)
```
